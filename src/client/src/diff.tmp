diff --git a/src/client/src/app/crossword/board/board.component.html b/src/client/src/app/crossword/board/board.component.html
index 34f4704..57de9b9 100644
--- a/src/client/src/app/crossword/board/board.component.html
+++ b/src/client/src/app/crossword/board/board.component.html
@@ -1,7 +1,7 @@
-<div class="crossword-board-container">
-  <div id="crossword board">
-    <div *ngFor="let row of crossword">
-      <input *ngFor="let square of row" class="crossword-board__item " [class.black-square]='square==="0"' [disabled]='square==="0"'>
+<div id="crossword-board-container">
+  <div id="crossword-board">
+    <div *ngFor="let row of crosswordGrid">
+      <input *ngFor="let square of row" class="crossword-board-item " [class.black-square]='square==="0"' [disabled]='square==="0"'>
     </div>
   </div>
 </div>
diff --git a/src/client/src/app/crossword/board/board.component.scss b/src/client/src/app/crossword/board/board.component.scss
index baa32d0..2665fe3 100644
--- a/src/client/src/app/crossword/board/board.component.scss
+++ b/src/client/src/app/crossword/board/board.component.scss
@@ -1,15 +1,20 @@
 $crossword-item-size: 50px;
 $crossword-dimension: 10;
 
-$color-valid-item: #9AFF67;
-$color-focus-item: #FFFF74;
+.black-square {
+  background: black;
+  border: 15px, blue;
+}
+$color-valid-item: #76C84B;
+$color-focus-item: #EDFF71;
 
-.center {
-  text-align: center;
-  vertical-align: center;
+div {
+  contentEditable: true;  
 }
-.crossword-board-container {
-  height:100%;
+
+#crossword-board-container {
+  margin: 10px;
+  height: 100%;
   text-align: center;
   vertical-align: center;
 }
@@ -22,13 +27,12 @@ $color-focus-item: #FFFF74;
 	width: ($crossword-item-size * $crossword-dimension);
 	height: ($crossword-item-size * $crossword-dimension);
 	display: grid;
-	grid-template: repeat(13,7.6923076923076925%) / repeat(13,7.6923076923076925%);
 	list-style-type: none;
 	padding: 0;
 	margin: 0 auto;
 }
 
-.crossword-board__item {
+.crossword-board-item {
 	border: 1px solid #000000;
 	background: transparent;
 	position: relative;
@@ -68,46 +72,3 @@ $color-focus-item: #FFFF74;
 	line-height: 1;
 }
 
-.black-square {
-  background: black;
-
-}
-  div {
-    contentEditable: true;  
-  }
-  
-  .filled {
-    width: 38px;
-    height: 38px;
-    background: black;
-    border: 1px solid black;
-    padding: 0;
-    margin: 0;
-    float: left;
-    color: black;
-  }
-  
-  .square {
-    font-size: 25px;
-    font-weight: bold;
-    text-align: center;
-    vertical-align: center;
-  }
-  .empty {
-    width: 38px;
-    height: 38px;
-    border: 1px solid black;
-    padding: 0;
-    margin: 0;
-    float: left;
-  }
-  
-  .numbered {
-    counter-increment: value;
-  }
-  
-  .numbered:nth-of-type(n)::before {
-    content: counter(value);
-    font-size: 10px;
-    position: absolute;
-  }
\ No newline at end of file
diff --git a/src/client/src/app/crossword/board/board.component.ts b/src/client/src/app/crossword/board/board.component.ts
index 1b50175..01a5c10 100644
--- a/src/client/src/app/crossword/board/board.component.ts
+++ b/src/client/src/app/crossword/board/board.component.ts
@@ -1,29 +1,19 @@
 import { Component, OnInit } from '@angular/core';
-
-const CROSSWORD: string[][] = [
-    ['T', 'O', 'M', 'O', 'R', 'R', 'O', 'W', '0', 'O'],
-    ['E', '0', 'E', '0', '0', 'I', '0', 'H', '0', 'N'],
-    ['L', 'A', 'T', 'E', '0', 'N', 'O', 'I', 'S', 'E'],
-    ['E', '0', 'R', '0', '0', 'D', '0', 'S', '0', ' '],
-    ['T', 'O', 'M', 'O', 'R', 'R', 'O', 'W', '0', 'O'],
-    ['E', '0', 'E', '0', '0', 'I', '0', 'H', '0', 'N'],
-    ['L', 'A', 'T', 'E', '0', 'N', 'O', 'I', 'S', 'E'],
-    ['E', '0', 'R', '0', '0', 'D', '0', 'S', '0', '0'],
-    ['T', 'O', 'M', 'O', 'R', 'R', 'O', 'W', '0', 'O'],
-    ['E', '0', 'E', '0', '0', 'I', '0', 'H', '0', 'N']];
-
+import { CrosswordGridService } from './crossword-grid.service';
 
 @Component({
     selector: 'app-board',
     templateUrl: './board.component.html',
-    styleUrls: ['./board.component.scss']
+    styleUrls: ['./board.component.scss'],
+    providers: [CrosswordGridService]
 })
 export class BoardComponent implements OnInit {
+    public crosswordGrid: string[][]; 
+    
+    constructor(private crosswordGridService: CrosswordGridService) { 
 
-    public crossword = CROSSWORD;
-    constructor() { }
-
-    public ngOnInit(): void {
     }
-
+    public ngOnInit(): void { 
+        this.crosswordGrid = this.crosswordGridService.getViewableGrid();
+    }
 }
